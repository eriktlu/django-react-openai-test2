Prompt: Add a red text
  Example answer:
  // Javascript
    const app = document.getElementById('main');
    const message = document.createElement('div');
    message.innerHTML = 'I am so excited to learn Javascript!';
    message.style.color = 'red';
    app.prepend(message);
  // End of Javascript

  Prompt: create a red ball with up and down bouncing animation
  Example answer 2:
  // Javascript
    const app = document.getElementById('main');
    const ball = document.createElement('div');
    ball.style.position = 'absolute';
    ball.style.top = '0px';
    ball.style.right = '0px';
    ball.style.width = '50px';
    ball.style.height = '50px';
    ball.style.backgroundColor = 'red';
    ball.style.borderRadius = '50%';

    let topPosition = 0;
    let direction = 'up';

    setInterval(() => {
        if (direction === 'up') {
            topPosition += 5;
            ball.style.top = `${topPosition}px`;
            if (topPosition >= 200) {
                direction = 'down';
            }
        } else {
            topPosition -= 5;
            ball.style.top = `${topPosition}px`;
            if (topPosition <= 0) {
                direction = 'up';
            }
        }
    }, 50);

    app.prepend(ball);
  // End of Javascript

  Propmpt: Create a snake game
  Example answer 3:
  // Javascript
    const app = document.getElementById('main');
    const game = document.createElement('div');
    game.style.position = 'absolute';
    game.style.top = '0px';
    game.style.left = '0px';
    game.style.width = '100%';
    game.style.height = '100vh';

    const snake = {
        position: {x: 250, y: 250},
        body: [[250, 250], [240, 250], [230, 250]],
        direction: 'right',
        speed: 10
    }

    const food = {
        position: {x: 0, y: 0},
        color: 'red'
    }

    const gameLoop = setInterval(() => {
        // Move snake
        const head = snake.body[0];
        switch (snake.direction) {
            case 'right':
                snake.position.x += snake.speed;
                break;
            case 'left':
                snake.position.x -= snake.speed;
                break;
            case 'up':
                snake.position.y -= snake.speed;
                break;
            case 'down':
                snake.position.y += snake.speed;
                break;
        }
        snake.body.unshift([snake.position.x, snake.position.y]);
        snake.body.pop();

        // Generate food
        if (food.position.x === 0 && food.position.y === 0) {
            food.position.x = Math.floor(Math.random() * window.innerWidth/10) * 10 - 10;
            food.position.y = Math.floor(Math.random() * window.innerHeight/10) * 10 - 10;
        }

        // Check if food has been eaten
        if (head[0] === food.position.x && head[1] === food.position.y) {
            food.position.x = 0;
            food.position.y = 0;
            snake.body.push(head);
        }

        // Draw
        game.innerHTML = '';
        for (let i = 0; i < snake.body.length; i++) {
            const square = document.createElement('div');
            square.style.position = 'absolute';
            square.style.width = '10px';
            square.style.height = '10px';
            square.style.left = `${snake.body[i][0]}px`;
            square.style.top = `${snake.body[i][1]}px`;
            square.style.backgroundColor = i === 0 ? 'yellow' : 'green';
            game.appendChild(square);
        }
        const foodSquare = document.createElement('div');
        foodSquare.style.position = 'absolute';
        foodSquare.style.width = '10px';
        foodSquare.style.height = '10px';
        foodSquare.style.left = `${food.position.x}px`;
        foodSquare.style.top = `${food.position.y}px`;
        foodSquare.style.backgroundColor = food.color;
        game.appendChild(foodSquare);

        // Check collision
        if (snake.position.x < 0 || snake.position.x > window.innerWidth || snake.position.y < 0 || snake.position.y > window.innerHeight - 10) {
            alert('Game Over!');
            snake.position = {x: 250, y: 250};
            snake.body = [[250, 250], [240, 250], [230, 250]];
            snake.direction = 'right';
            snake.speed = 10;
        }
    }, 100);

    document.addEventListener('keydown', (e) => {
        switch (e.key) {
            case 'ArrowUp':
                snake.direction = 'up';
                break;
            case 'ArrowDown':
                snake.direction = 'down';
                break;
            case 'ArrowLeft':
                snake.direction = 'left';
                break;
            case 'ArrowRight':
                snake.direction = 'right';
                break;
        }
    });

    app.prepend(game);
// End of Javascript

Prompt: Add smiley face to bottom right of screen
Example answer 4:
  // Javascript
      const app = document.getElementById('main');
      const smiley = document.createElement('div');
      smiley.style.position = 'absolute';
      smiley.style.bottom = '0px';
      smiley.style.right = '0px';
      smiley.style.width = '50px';
      smiley.style.height = '50px';
      smiley.style.backgroundColor = 'yellow';
      smiley.style.borderRadius = '50%';
      smiley.innerHTML = `
          <div style="position: absolute; top: 20%; left: 20%; width: 20%; height: 20%; background-color: black; border-radius: 50%;"></div>
          <div style="position: absolute; top: 20%; right: 20%; width: 20%; height: 20%; background-color: black; border-radius: 50%;"></div>
          <div style="position: absolute; bottom: 20%; left: 40%; width: 20%; height: 10%; background-color: black; border-radius: 50%;"></div>
      `;
      app.prepend(smiley);
  // End of Javascript

  Example of task you can't do:
  // Javascript
    alert('I am not capable of doing that, sorry!');
  // End of Javascript